<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>pl.twoje</groupId>
    <artifactId>api-tests</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <!-- Java toolchain -->
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Versions centralized here -->
        <junit.jupiter.version>5.10.2</junit.jupiter.version>
        <rest.assured.version>5.4.0</rest.assured.version>
        <allure.junit5.version>2.25.0</allure.junit5.version>
        <allure.maven.plugin.version>2.12.0</allure.maven.plugin.version>
        <maven.surefire.version>3.2.5</maven.surefire.version>
    </properties>

    <dependencies>
        <!-- RestAssured for API tests -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${rest.assured.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- JsonPath helpers (often used with RestAssured) -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>json-path</artifactId>
            <version>${rest.assured.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- JUnit 5 (Jupiter) -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Hamcrest matchers (optional, complements RestAssured) -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>

        <!-- Allure adapter for JUnit 5 (this generates target/allure-results) -->
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-junit5</artifactId>
            <version>${allure.junit5.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-rest-assured</artifactId>
            <version>${allure.junit5.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Java compiler set to 21 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>21</source>
                    <target>21</target>
                </configuration>
            </plugin>

            <!-- Surefire runs unit tests on JUnit Platform (needed for JUnit 5) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <!-- Ensure module path doesn't break on newer JDKs -->
                    <useModulePath>false</useModulePath>

                    <!-- Include typical JUnit test class name patterns -->
                    <includes>
                        <include>**/*Tests.java</include>
                        <include>**/*Test.java</include>
                    </includes>

                    <!-- Uncomment to allow report generation even when tests fail -->
                    <!-- <testFailureIgnore>true</testFailureIgnore> -->
                </configuration>
            </plugin>

            <!-- Allure Maven plugin to build and serve the HTML report -->
            <plugin>
                <groupId>io.qameta.allure</groupId>
                <artifactId>allure-maven</artifactId>
                <version>${allure.maven.plugin.version}</version>
                <configuration>
                    <!-- Where adapter writes raw results -->
                    <resultsDirectory>${project.build.directory}/custom-results</resultsDirectory>
                    <reportDirectory>${project.build.directory}/custom-report</reportDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
